// <auto-generated />
using Interview.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interview.EF.Migrations
{
    [DbContext(typeof(InterviewContext))]
    partial class InterviewContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Interview.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdUser")
                        .HasMaxLength(32)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdUser = 3,
                            Name = "Admin1"
                        });
                });

            modelBuilder.Entity("Interview.Entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAdmin")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            IdAdmin = 1,
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Johnny",
                            IdAdmin = 1,
                            LastName = "Donny"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Bertrand",
                            IdAdmin = 1,
                            LastName = "McCall"
                        });
                });

            modelBuilder.Entity("Interview.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAdmin")
                        .HasColumnType("int");

                    b.Property<int>("IdLevel")
                        .HasColumnType("int");

                    b.Property<int>("IdTechno")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdAdmin = 0,
                            IdLevel = 65,
                            IdTechno = 0,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 2,
                            IdAdmin = 0,
                            IdLevel = 65,
                            IdTechno = 0,
                            Name = "Microeconomics"
                        },
                        new
                        {
                            Id = 3,
                            IdAdmin = 0,
                            IdLevel = 66,
                            IdTechno = 0,
                            Name = "Macroeconomics"
                        },
                        new
                        {
                            Id = 4,
                            IdAdmin = 0,
                            IdLevel = 65,
                            IdTechno = 0,
                            Name = "Calculus"
                        },
                        new
                        {
                            Id = 5,
                            IdAdmin = 0,
                            IdLevel = 67,
                            IdTechno = 0,
                            Name = "Trigonometry"
                        },
                        new
                        {
                            Id = 6,
                            IdAdmin = 0,
                            IdLevel = 65,
                            IdTechno = 0,
                            Name = "Composition"
                        },
                        new
                        {
                            Id = 7,
                            IdAdmin = 0,
                            IdLevel = 67,
                            IdTechno = 0,
                            Name = "Literature"
                        });
                });

            modelBuilder.Entity("Interview.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAgent")
                        .HasColumnType("int");

                    b.Property<int>("IdCandidat")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Quiz");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdAgent = 3,
                            IdCandidat = 99,
                            Name = "Quiz1"
                        });
                });

            modelBuilder.Entity("Interview.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Carson",
                            LastName = "Alexander",
                            Role = 2
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Meredith",
                            LastName = "Alonso",
                            Role = 2
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Arturo",
                            LastName = "Anand",
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Gytis",
                            LastName = "Barzdukas",
                            Role = 3
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Yan",
                            LastName = "Li",
                            Role = 2
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Peggy",
                            LastName = "Justice",
                            Role = 3
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Laura",
                            LastName = "Norman",
                            Role = 2
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Nino",
                            LastName = "Olivetto",
                            Role = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
