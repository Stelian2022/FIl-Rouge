// <auto-generated />
using System;
using QuizApp.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace QuizApp.EF.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20240608170150_Contoso_V1")]
    partial class Contoso_V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuizApp.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Credits = 3,
                            Title = "Chemistry"
                        },
                        new
                        {
                            Id = 2,
                            Credits = 3,
                            Title = "Microeconomics"
                        },
                        new
                        {
                            Id = 3,
                            Credits = 3,
                            Title = "Macroeconomics"
                        },
                        new
                        {
                            Id = 4,
                            Credits = 4,
                            Title = "Calculus"
                        },
                        new
                        {
                            Id = 5,
                            Credits = 4,
                            Title = "Trigonometry"
                        },
                        new
                        {
                            Id = 6,
                            Credits = 3,
                            Title = "Composition"
                        },
                        new
                        {
                            Id = 7,
                            Credits = 4,
                            Title = "Literature"
                        });
                });

            modelBuilder.Entity("QuizApp.Entities.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Grade = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Grade = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Grade = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Grade = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Grade = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            Grade = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 2,
                            Grade = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 1,
                            Grade = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 6,
                            Grade = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 7,
                            Grade = 1,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("QuizApp.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PhotoUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnrollmentDate = new DateTime(2010, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Carson",
                            LastName = "Alexander",
                            PhotoUri = "/Images/awkwardguy.jpg"
                        },
                        new
                        {
                            Id = 2,
                            EnrollmentDate = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Meredith",
                            LastName = "Alonso",
                            PhotoUri = "/Images/fashionnightmare.jpg"
                        },
                        new
                        {
                            Id = 3,
                            EnrollmentDate = new DateTime(2013, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Arturo",
                            LastName = "Anand",
                            PhotoUri = "/Images/mustachioed.jpg"
                        },
                        new
                        {
                            Id = 4,
                            EnrollmentDate = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gytis",
                            LastName = "Barzdukas"
                        },
                        new
                        {
                            Id = 5,
                            EnrollmentDate = new DateTime(2012, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Yan",
                            LastName = "Li"
                        },
                        new
                        {
                            Id = 6,
                            EnrollmentDate = new DateTime(2011, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Peggy",
                            LastName = "Justice",
                            PhotoUri = "/Images/disheveled.jpg"
                        },
                        new
                        {
                            Id = 7,
                            EnrollmentDate = new DateTime(2013, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Laura",
                            LastName = "Norman",
                            PhotoUri = "/Images/raspberryberet.jpg"
                        },
                        new
                        {
                            Id = 8,
                            EnrollmentDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Nino",
                            LastName = "Olivetto",
                            PhotoUri = "/Images/smileydude.jpg"
                        });
                });

            modelBuilder.Entity("QuizApp.Entities.Enrollment", b =>
                {
                    b.HasOne("QuizApp.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizApp.Entities.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuizApp.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("QuizApp.Entities.User", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
